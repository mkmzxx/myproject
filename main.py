import os
import time
import threading
import sys
import requests
import random
from utils import get_random_proxy
from bot_core import run_bot

def normalize_proxy(p):
    if "://" in p:
        return p
    else:
        return "http://" + p

def is_proxy_working(proxy_url):
    try:
        proxies = {
            "http": proxy_url,
            "https": proxy_url,
        }
        response = requests.get("http://httpbin.org/ip", proxies=proxies, timeout=5)
        return response.status_code == 200
    except:
        return False

def test_proxies():
    print("üîé proxy.txt ‡¶´‡¶æ‡¶á‡¶≤ ‡¶•‡ßá‡¶ï‡ßá ‡¶™‡ßç‡¶∞‡¶ï‡ßç‡¶∏‡¶ø ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...")
    try:
        with open("proxy.txt", "r") as f:
            raw_proxies = [line.strip() for line in f if line.strip()]
    except FileNotFoundError:
        print("‚ùå proxy.txt ‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø!")
        return

    working_proxies = []
    for p in raw_proxies:
        full_proxy = normalize_proxy(p)
        if is_proxy_working(full_proxy):
            print(f"‚úÖ Working: {full_proxy}")
            working_proxies.append(full_proxy)
        else:
            print(f"‚ùå Dead: {full_proxy}")

    with open("working_proxies.txt", "w") as f:
        for p in working_proxies:
            f.write(p + "\n")

    print(f"\n‚úÖ ‡¶Æ‡ßã‡¶ü {len(working_proxies)}‡¶ü‡¶ø ‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶ï‡¶ø‡¶Ç ‡¶™‡ßç‡¶∞‡¶ï‡ßç‡¶∏‡¶ø ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá working_proxies.txt ‡¶§‡ßá‡•§")

def start_sessions_concurrently(session_count=2, use_proxy=True):
    threads = []
    for _ in range(session_count):
        proxy = get_random_proxy() if use_proxy else None
        t = threading.Thread(target=run_bot, kwargs={'headless': False, 'proxy': proxy})
        t.start()
        threads.append(t)

    for t in threads:
        t.join()

def main_menu():
    while True:
        print("\n=== ‡¶Æ‡ßá‡¶á‡¶® ‡¶Æ‡ßá‡¶®‡ßÅ ===")
        print("1. Proxy Test")
        print("2. Program Run")
        print("3. Exit")

        choice = input("‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶™‡¶∂‡¶® ‡¶¶‡¶ø‡¶® (1/2/3): ").strip()

        if choice == "1":
            test_proxies()

        elif choice == "2":
            try:
                session_count = int(input("‚ùì ‡¶ï‡¶§‡¶ü‡¶ø ‡¶∏‡ßá‡¶∂‡¶® ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá ‡¶ö‡¶æ‡¶≤‡¶æ‡¶§‡ßá ‡¶ö‡¶æ‡¶®? (‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü: 2): ") or 2)
                use_proxy = input("‚ùì ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶™‡ßç‡¶∞‡ßã‡¶ï‡ßç‡¶∏‡¶ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶®? (y/n): ").strip().lower() == "y"
                print("üöÄ ‡¶¨‡¶ü ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...\n")
                while True:  # ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶∏‡ßá‡¶∂‡¶®‡¶ó‡ßÅ‡¶≤‡ßã ‡¶¨‡¶æ‡¶∞‡¶¨‡¶æ‡¶∞ ‡¶ö‡¶≤‡¶§‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‡¶Ø‡¶§‡¶ï‡ßç‡¶∑‡¶£ ‡¶®‡¶æ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶¨‡ßá
                    start_sessions_concurrently(session_count, use_proxy)
                    time.sleep(3)
            except Exception as e:
                print(f"‚ö†Ô∏è ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá: {e}")

        elif choice == "3":
            print("üëã ‡¶™‡ßç‡¶∞‡ßã‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...")
            sys.exit()

        else:
            print("‚ö†Ô∏è ‡¶∏‡¶†‡¶ø‡¶ï ‡¶Ö‡¶™‡¶∂‡¶® ‡¶¶‡¶ø‡¶® (1, 2, ‡¶Ö‡¶•‡¶¨‡¶æ 3)!")

if __name__ == "__main__":
    main_menu()
